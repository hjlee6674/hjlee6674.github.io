---
layout: post
title:  "4.6 Computing S-Matrix Elements from Feynman Diagrams "
categories: Peskin
use_math: true
mathjax: true
---
## 4.6 Computing S-Matrix Elements from Feynman Diagrams
우리는 $T=-\infty$일 때와 $T=\infty$일 때 state를 product하여 scattering을 설명했다. 그 과정 중에
S-matrix를 정의하고 각 state의 time-evolution operator를 꺼내 S-matrix와 연관지었다.
$$
  \left<\bf{p}_1\bf{p}_2\cdots\right|
  S
  \left|\bf{k}_\mathcal{A}\bf{k}_\mathcal{B}\right>
  =\lim_{T\rightarrow\infty}
  \left<\bf{p}_1\bf{p}_2\cdots\right|
  e^{-iH(2T)}
  \left|\bf{k}_\mathcal{A}\bf{k}_\mathcal{B}\right>.
$$

이 quantity를 계산하기 위해 우리는 4.2에서 이용한 vacuum state를 가져올 것이다.
$$
\left|\Omega\right>=\lim_{T\rightarrow\infty(1-i\epsilon)}
\left(e^{-iE_0T}\left<\Omega|0\right>\right)^{-1}e^{-iHT}\left|0\right>.
$$
잠시 잊어버렸을 수도 있는 notation들을 상기해보자.
$\left|\Omega\right>$는 interacting theory에서의 ground state이고
$\left|0\right>$는 free theory에서의 ground state이다. 또한
$H=H_0+H_{\text{int}}$이고 $E_0= \left<\Omega\right|H\left|\Omega\right>$
로 정의하였다.

이번 chapter에서 우리의 목표는
$$
 \left|\bf{k}_\mathcal{A}\bf{k}_\mathcal{B}\right>
 \propto \lim_{T\rightarrow\infty(1-i\epsilon)}
 e^{-iHT}\left|\bf{k}_\mathcal{A}\bf{k}_\mathcal{B}\right>_0.
$$
와 같은 형태의 관계를 찾는 것이다. 물론 쉽지 않다. 4.2에서 우리는 vacuum이 absolute lowest energy state이라는 사실을 이용했다.
여기서는 이보다 더 일반적인 사실만을 쓸 수 있다: intital state와 final state가 잘 구분된 particle state는 처음에 결정된 0이 아닌 운동량과 일치하는 lowest energy를 가진다. 가장 큰 문제는 interaction이 서로 다른 particle들의 scattering 뿐만 아니라, single-particle states 스스로에게도 영향을 준다는 것이다. 사실 이는 field theory가 가진 가장 근본적인 문제와 관련이 있기도 하다.

만약 위의 식이 어떤 방식으로던 정당성을 입증할 수만 있다면, 우리는 이 식을 이용해 처음 식의 LHS를 다시 쓸 수 있을 것이다.
$$
\lim_{T\rightarrow\infty(1-i\epsilon)}
  {}_0\left<\bf{p}_1\cdots\bf{p}_n\right|
  e^{-iH(2T)}
  \left|\bf{p}_\mathcal{A}\bf{p}_\mathcal{B}\right>_0\qquad\qquad\qquad\qquad\qquad\qquad
    \\ \propto
   \lim_{T\rightarrow\infty(1-i\epsilon)}
  {}_0\left<\bf{p}_1\cdots\bf{p}_n\right|
  T\left(\exp\left[{-i\int^T_{-T}dt\,H_I(t)}\right]\right)
  \left|\bf{p}_\mathcal{A}\bf{p}_\mathcal{B}\right>_0.
$$
Vacuum expectation value를 계산하면서 free vacuum state와 interacting vacuum state 사이에 약간 이상한 factor가 등장하지만, Eq.(4.31)에서 상쇄됨을 확인할 수 있다. 이 과정 중에 비슷한 상쇄가 가능하면 좋겠지만 인생을 그렇게 호락호락하지 않으니 직접 확인해야만 한다. 사실 상쇄된다. 그러나 이 결론까지 도달하기는 쉽지 않다. 한 가지 작은 수정을 통해 S-matrix의 nontrivial한 부분을 다음과 같이 간단하게 만들 수 있다.
$$
 {}_0\left<\bf{p}_1\cdots\bf{p}_n\right|
  iT
  \left|\bf{p}_\mathcal{A}\bf{p}_\mathcal{B}\right>_0\qquad\qquad\qquad\qquad\qquad\qquad\qquad\qquad
    \\=
   \lim_{T\rightarrow\infty(1-i\epsilon)}\left(
  {}_0\left<\bf{p}_1\cdots\bf{p}_n\right|
  T\left(\exp\left[{-i\int^T_{-T}dt\,H_I(t)}\right]\right)
  \left|\bf{p}_\mathcal{A}\bf{p}_\mathcal{B}\right>_0\right)_{\substack{\text{connected,}\\ \text{amputated}}}.
$$
'connected'와 'amputated'는 가능한 Feynman diagram을 의미하지만 잠시 후에 정의하도록 하자. 이 식은 7.2에서 증명할 것이다.

우선 우리는 이 식의 matrix element를 Feynamn diagram의 합으로 표현하는 방법을 배워야 한다. 먼저 final state에 particle이 2개 있는 경우의 몇 가지 항들을 explicit하게 구해보자. 첫 번째 항은
$$
\begin{align*}
{}_0\left<\bf{p}_1\bf{p}_2|\bf{p}_\mathcal{A}\bf{p}_\mathcal{B}\right>_0
&=\sqrt{2E_12E_22E_\mathcal{A}2E_\mathcal{B}}\left<0\right|
  a_1a_2a^\dagger_\mathcal{A} a^\dagger_\mathcal{B}
  \left|0\right>  \\
&=2E_\mathcal{A}2E_\mathcal{B}\left(
  \delta^{(3)}(\bf{p}_\mathcal{A}-\bf{p}_1)\delta^{(3)}(\bf{p}_\mathcal{B}-\bf{p}_2)
  +\delta^{(3)}(\bf{p}_\mathcal{A}-\bf{p}_2)\delta^{(3)}(\bf{p}_\mathcal{B}-\bf{p}_1)
\right).
\end{align*}
$$
가 된다. Delta function들은 momentum conservation으로 initial state와 final state를 동일하게 만든다. 그래서 이 항은
$S=1+iT$ 중 $1$에 포함되고 scattering matrix element $\mathcal{M}$에 기여하지 않는다.
다음 항은 Eq.(4.92)
<!-- You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/ -->
